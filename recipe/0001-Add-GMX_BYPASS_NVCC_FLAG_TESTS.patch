From defe5d9ddfd5c039a241c85174df26d023b223ac Mon Sep 17 00:00:00 2001
From: Mark Abraham <mark.j.abraham@gmail.com>
Date: Thu, 8 Jun 2023 13:28:55 +0200
Subject: [PATCH] Add GMX_BYPASS_NVCC_FLAG_TESTS

---
 cmake/gmxManageNvccConfig.cmake | 14 +++++++++-----
 1 file changed, 9 insertions(+), 5 deletions(-)

diff --git a/cmake/gmxManageNvccConfig.cmake b/cmake/gmxManageNvccConfig.cmake
index a5dd840305..35083ae991 100644
--- a/cmake/gmxManageNvccConfig.cmake
+++ b/cmake/gmxManageNvccConfig.cmake
@@ -130,8 +130,12 @@ endif() # GMX_CHECK_NVCC
 # As this code is not yet tested on Windows, it always accepts the
 # flags in that case.
 function(gmx_add_nvcc_flag_if_supported _output_variable_name_to_append_to _flags_cache_variable_name)
-    # If the check has already been run, do not re-run it
-    if (NOT ${_flags_cache_variable_name} AND NOT WIN32)
+    if (GMX_BYPASS_NVCC_FLAG_TESTS OR WIN32)
+        # Don't test the flag if the user asked us not to check, or on
+        # platforms where the test is not known to work.
+        set(_cache_variable_value TRUE)
+    elseif (NOT ${_flags_cache_variable_name})
+        # The test should run and has not already run
         message(STATUS "Checking if nvcc accepts flags ${ARGN}")
         execute_process(
             COMMAND ${CUDA_NVCC_EXECUTABLE} ${ARGN} -ccbin ${CUDA_HOST_COMPILER} "${CMAKE_SOURCE_DIR}/cmake/TestCUDA.cu"
@@ -162,10 +166,10 @@ function(gmx_add_nvcc_flag_if_supported _output_variable_name_to_append_to _flag
                 message(STATUS "Checking if nvcc accepts flags ${ARGN} - Failed")
             endif()
         endif()
-        set(${_flags_cache_variable_name} ${_cache_variable_value} CACHE BOOL "Whether NVCC supports flag(s) ${ARGN}")
     endif()
-    # Append the flags to the output variable if they have been tested to work
-    if (${_flags_cache_variable_name} OR WIN32)
+    set(${_flags_cache_variable_name} ${_cache_variable_value} CACHE BOOL "Whether NVCC supports flag(s) ${ARGN}")
+    # Append the flags to the output variable
+    if (${_flags_cache_variable_name})
         list(APPEND ${_output_variable_name_to_append_to} ${ARGN})
         set(${_output_variable_name_to_append_to} ${${_output_variable_name_to_append_to}} PARENT_SCOPE)
     endif()
-- 
2.25.1

